//Excerpt from "DirectXFramework.cpp" for AsterMaster
//AsterMaster is a game much like asteroids, 
//  but with opponent ships who pursue the player while avoiding asteroids and learning about hazards.
//
// This function determines if the AI ship is whithin distance to circle the player for an attack, 
//  and if so, whether the bot should circle clockwise or counter-clockwise.


//Circling function, determines which direction is best to circle.
void DXGame::AIBot::circle(float dt)
{
	//if able to chase, prevents too much thrust
	if (this->canchase>=0.2)
		this->canchase=0.0f;
	//updates the previous quad
	this->lastQ=this->daQuad;
	//Updates current quad with needed info
	this->daQuad = quadToPlay(
		this->ship.sprite.position.x, 
		this->ship.sprite.position.y,
		targx, 
		targy);
	//If not recently determined clockwise or not
	if (this->clocklock==0)
	{
		this->clockwise=this->clockWise();
		this->clocklock=1;
	}
	
	//carry out action
	if (this->clockwise)
	{
		ThrustClockwise()
	}
	else//CC
	{
		ThrustCounterClockwise
	}
